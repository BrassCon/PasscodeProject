version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: webapp_postgres
    environment:
      POSTGRES_DB: webapp
      POSTGRES_USER: webapp
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webapp -d webapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webapp_network

  app:
    build: .
    container_name: webapp_flask
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: webapp
      POSTGRES_USER: webapp
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
      FLASK_ENV: production
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - webapp_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  webapp_network:
    driver: bridge
